services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/.venv
    environment:
      FIRESTORE_EMULATOR_HOST: "firestore:8081"  # Firestore エミュレーターのホスト
      GOOGLE_CLOUD_PROJECT: "test-project"  # Firestore エミュレーターで使うプロジェクト名
      BASIC_AUTH_PASSWORD: "password"  
      email_address: hop
    command: ["--reload", "--log-level", "debug"]
    depends_on:
      firestore:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  firestore:
    image: google/cloud-sdk:latest
    entrypoint: ["/bin/sh", "-c"]
    command:
      - >
        gcloud beta emulators firestore start --host-port=0.0.0.0:8081
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    ports:
      - 4040:4040 # Ngrok web ui
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    healthcheck:
      test: /bin/bash -c "</dev/tcp/127.0.0.1/4040"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  update-webhook:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    network_mode: host
    volumes:
      - .:/app
      - /app/.venv
    depends_on:
      ngrok:
        condition: service_healthy
      api:
        condition: service_healthy
    environment:
      LINE_CHANNEL_ACCESS_TOKEN: ${LINE_CHANNEL_ACCESS_TOKEN}
    entrypoint: ["python", "/app/scripts/update_webhook_url.py"]
